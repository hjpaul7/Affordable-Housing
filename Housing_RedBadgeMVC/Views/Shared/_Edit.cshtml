@model Housing_RedBadgeMVC.Models.HousingModels.HousingListItem



<a href="#" class="card-link" data-toggle="modal" data-target="#editModal">Edit</a>

<!-- Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header border-bottom-0">
                <h5 class="modal-title" id="exampleModalLabel">Editing: <font color="green">@Html.DisplayFor(model => model.Name)</font></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
                <div class="modal-body" style="text-align: left">

                    @using (Html.BeginForm("Edit", "Housing", new { id = Model.HousingId }))
                    {
                        @Html.AntiForgeryToken()


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.HousingId)

                        <div class="form-group">
                            <small class="form-text text-muted">@Html.LabelFor(model => model.Name)</small>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <small class="form-text text-muted">@Html.LabelFor(model => model.Address)</small>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <small class="form-text text-muted">@Html.LabelFor(model => model.UnitsAvailable)</small>
                            @Html.EditorFor(model => model.UnitsAvailable, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitsAvailable, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <small class="form-text text-muted">@Html.LabelFor(model => model.AcceptVoucher)</small>
                            @Html.EnumDropDownListFor(model => model.AcceptVoucher, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AcceptVoucher, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <small class="form-text text-muted">@Html.LabelFor(model => model.SectionType)</small>
                            @Html.EnumDropDownListFor(model => model.SectionType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SectionType, "", new { @class = "text-danger" })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary">@Html.ActionLink("Detailed Edit View", "Edit", new { id = Model.HousingId }, new { @class = "action-link" })</button>
                            <button type="submit" class="btn btn-success">Save</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    }
                </div>
        </div>
    </div>
</div>



@*<a href="#" class="card-link" data-toggle="modal" data-target="#editModal">Edit</a>

    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Edit", "Housing", new { id = Model.HousingId }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h5 style="margin-top: 20px">Editing "@Html.DisplayFor(model => model.Name)"</h5>
                            <hr />

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(model => model.HousingId)



                            <div class="edit-container">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UnitsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UnitsAvailable, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UnitsAvailable, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AcceptVoucher, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EnumDropDownListFor(model => model.AcceptVoucher, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.AcceptVoucher, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.SectionType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EnumDropDownListFor(model => model.SectionType, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SectionType, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-success">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success">Save</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>*@







